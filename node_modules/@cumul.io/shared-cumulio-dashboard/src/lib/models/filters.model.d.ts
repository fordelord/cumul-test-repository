declare type StringOrNumber = string | number;
declare type StringOrNumberOrBoolean = StringOrNumber | boolean;
declare type FilterOperators = 'and' | 'or';
declare type FilterIn = {
    expression?: FilterExpression;
    parameters?: [
        {
            slot?: 'category' | 'x-axis' | 'y-axis' | 'dimension' | 'slidermetric' | 'time' | 'levels' | 'geo' | 'coordinates';
            level?: number;
            decimals?: number;
        },
        Array<(string | number) | Array<string | number>>
    ];
    properties?: Record<string, string | number | unknown>;
};
export declare type FilterExpression = '? in ?' | '? = ?' | '? between ?' | '? > ?' | '? >= ?' | '? < ?' | '? <= ?';
export declare type FilterOrigin = 'filterFromVizItem' | 'filterFromFilterItem' | 'itemFilter' | 'global';
export declare type Filter = {
    fromAuthorization?: boolean;
    expression?: FilterExpression;
    parameters?: [
        {
            columnId?: string;
            datasetId?: string;
            level?: number;
            lowestLevel?: number;
        } & Record<string, StringOrNumberOrBoolean | StringOrNumberOrBoolean[]>,
        (StringOrNumber | StringOrNumber[])[]
    ];
    properties?: {
        id?: string;
        ignore?: string[];
        itemId?: string;
        origin?: FilterOrigin;
        type?: 'where' | 'having';
    };
};
export declare type FilterInput = Partial<Record<FilterOperators, (FilterIn | FilterInput)[]>>;
export {};
